// app version
	window.myapp.compiledTime = "Thu Jun  7 21:42:41 CST 2012";  //this line is auto-generated by compile proccess, do not change it!

// i18n
	try{
		var supportedLang = 'zh-tw';
		var defaultLang = 'zh-tw';
		var language = ( window.navigator?(window.navigator.userLanguage || window.navigator.language):"" ) || defaultLang;
		language = language.toLowerCase();
		if(supportedLang.indexOf(language)<0) language = defaultLang;
		i18n.set(window.languages[language]);
	}catch(err){
		$(window).trigger('tryCatchError', {errorMsg:err.message+" at i18n init in main.js", errorLocation:err.stack});
	}

	// window.phonegapEnabled = true;

// phonegap
	document.addEventListener("deviceready", function(){
		try{
			console.log("phonegap load");
			window.phonegapEnabled = true;
			window.enableBackButton = true;
			if(myapp.LocalModel) myapp.LocalModel.setPhoneUUID(myapp.PG.Device.getUUID());
			// android back key
			myapp.PG.Device.overrideBackButton();
			myapp.PG.Event.onBackKeyDown(function(){
				if(!window.enableBackButton) return;
				// go back page, need to detect have to exit app or not
				var url = window.location.hash;
				if(url==='' || url.indexOf('startPage')>=0){ // start page, exit the app
					$(window).trigger('onExitApp');
					myapp.PG.Device.exitApp();
				}else if(url.indexOf('orderResultPage')>=0){ // finish page, disable the back button
					return;
				}else{
					window.history.go(-1);
				}
			});
			// pause and resume
			myapp.PG.Event.onPause(function(){
				$(window).trigger('onPause');
				window.myapp.AppEvent.onPause();
			});
			myapp.PG.Event.onResume(function(){
				$(window).trigger('onResume');
				window.myapp.AppEvent.onResume();
				window.myapp.GoogleAnalytics.trackOpenTime(); // send GA event
			});
			// native or web ui
			$(window).trigger('useNative', true);
			// send device info
			var deviceInfo = {};
			deviceInfo.uuid = myapp.PG.Device.getUUID();
			deviceInfo.userAgent = window.navigator.userAgent;
			deviceInfo.deviceName = myapp.PG.Device.getName();
			deviceInfo.osVersion = myapp.PG.Device.getVersion();
			deviceInfo.phonegapVersion = myapp.PG.Device.getPhoneGapVersion();
			deviceInfo.appVersion = window.myapp.Settings.appVersion;
			deviceInfo.screenWidth = screen.width;
			deviceInfo.screenHeight = screen.height;
			function setDeviceInfo(){
				var url = myapp.Api.DeviceInfoServiceUrl+'?action=setDeviceInfo';
				$.ajax({
					type: 'POST',
					url: url, 
					dataType: 'json',
					cache : false,
					data: JSON.stringify(deviceInfo),
					success: function(data){
						console.log(data.msg);
					},
					error: function(xhr, type){
					    console.log('setDeviceInfo: Ajax error!');
					    $(window).trigger('ajaxError2', {errorMsg:url, errorLocation:printStackTrace()});
					    setTimeout(setDeviceInfo, 3000);
					}
				});
			};
			setDeviceInfo();
		}catch(err){
			$(window).trigger('tryCatchError', {errorMsg:err.message+" at phonegap load in main.js", errorLocation:err.stack});
		}
	}, false);
	
// start
	$(document).ready(function () {
		try{
			$('#backgroundLogo').remove();
			window.app_router = new myapp.Router;
			Backbone.history.start();
			setTimeout(function(){ window.myapp.AppEvent.onStart(); }, 15000);
			// send GA event
			window.myapp.GoogleAnalytics.trackAppVersion();
			window.myapp.GoogleAnalytics.trackOpenTime();
		}catch(err){
			$(window).trigger('tryCatchError', {errorMsg:err.message+" at document ready in main.js", errorLocation:err.stack});
		}
	});
	

/*
			// check menu update
			var editMode = true;
			var menuLastUpdateTime = window.myapp.LocalModel.getMenuLastUpdateTime(editMode);
			window.inUpdatingMenu = true;
			// get menu from server if need
			var url = window.myapp.Api.MenuServiceUrl+"?action=updateDateIfNeed&lastUpdate="+menuLastUpdateTime+"&isEditMode="+editMode;
			var url2 = window.myapp.Api.MenuServiceUrl+"?action=getWholeMenu&isEditMode="+editMode;
			console.log(url);
			var saveMenu = function(data){
				console.log('saving menu data from server');
				window.menuData = new window.myapp.Model.MenuData();
				window.menuData.get('zipCodeIndexs').add(data.zipCodeIndexs);
				window.menuData.get('stores').add(data.stores);
				window.menuData.get('menus').add(data.menus);
				window.inUpdatingMenu = false;
				// save the menu to local file
				window.myapp.PG.File.write(window.myapp.Settings.LocalMenuDataFileName, JSON.stringify(data), function(){
					console.log("write success");
					// set last update time to local storage
					window.myapp.LocalModel.setMenuLastUpdateTime(new Date(), editMode);
				},function(error){
					console.log(error.code);
				});
			};
			$.ajax({
				type: 'GET',
				url: url, 
				dataType: 'json',
				success: function(data){
					saveMenu(data);
				},
				error: function(xhr, type){
				    console.log('updateDateIfNeed: Ajax error!');
				    console.log(type);
				    // already up to date? if yes, read from local file
				    // read success
				    // read fail
				    window.myapp.PG.File.read(window.myapp.Settings.LocalMenuDataFileName, function(text){
				    	console.log('read local menu file success');
						console.log(text.substring(0,20));
						var data = JSON.parse(text);
						window.menuData = new window.myapp.Model.MenuData();
						window.menuData.get('zipCodeIndexs').add(data.zipCodeIndexs);
						window.menuData.get('stores').add(data.stores);
						window.menuData.get('menus').add(data.menus);
						window.inUpdatingMenu = false;
					},function(error){
						console.log('read local menu file failed');
						console.log(error.code);
						$.ajax({
							type: 'GET',
							url: url2, 
							dataType: 'json',
							success: function(data){
								saveMenu(data);
							},
							error: function(xhr, type){
								console.log('get server menu file: Ajax error!');
							}
						});
					});
				}
			});
 
 */
